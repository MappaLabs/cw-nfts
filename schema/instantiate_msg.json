{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InstantiateMsg",
  "type": "object",
  "required": [
    "max_tokens",
    "name",
    "symbol",
    "token_uri",
    "unit_price"
  ],
  "properties": {
    "extension": {
      "anyOf": [
        {
          "$ref": "#/definitions/Metadata"
        },
        {
          "type": "null"
        }
      ]
    },
    "max_tokens": {
      "type": "integer",
      "format": "uint32",
      "minimum": 0.0
    },
    "name": {
      "type": "string"
    },
    "symbol": {
      "type": "string"
    },
    "token_uri": {
      "type": "string"
    },
    "unit_price": {
      "$ref": "#/definitions/Uint128"
    }
  },
  "definitions": {
    "Metadata": {
      "type": "object",
      "properties": {
        "animation_url": {
          "type": [
            "string",
            "null"
          ]
        },
        "attributes": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Trait"
          }
        },
        "audio": {
          "type": [
            "string",
            "null"
          ]
        },
        "background_color": {
          "type": [
            "string",
            "null"
          ]
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "external_url": {
          "type": [
            "string",
            "null"
          ]
        },
        "image": {
          "type": [
            "string",
            "null"
          ]
        },
        "image_data": {
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "type": [
            "string",
            "null"
          ]
        },
        "object": {
          "type": [
            "string",
            "null"
          ]
        },
        "royalty_payment_address": {
          "description": "The payment address, may be different to or the same as the minter addr question: how do we validate this?",
          "type": [
            "string",
            "null"
          ]
        },
        "royalty_percentage": {
          "description": "This is how much the minter takes as a cut when sold royalties are owed on this token if it is Some",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "video": {
          "type": [
            "string",
            "null"
          ]
        },
        "youtube_url": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "Trait": {
      "type": "object",
      "required": [
        "trait_type",
        "value"
      ],
      "properties": {
        "display_type": {
          "type": [
            "string",
            "null"
          ]
        },
        "trait_type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
